name: build
on: [push]
jobs:
  build:
    strategy:
      matrix:
        include:
          - os: windows-latest
            extension: bat
            name: windows
          - os: ubuntu-latest
            extension: sh
            name: linux
          - os: macos-latest
            extension: osx
            name: macOS
    runs-on: ${{ matrix.os }}
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: generate cmake files
        run: cmake -S src -B build
      - name: build
        run: cmake --build build

      - name: upload addon
        uses: actions/upload-artifact@v4
        with:
          name: modular_tree_${{ matrix.name }}
          path: tmp/*.zip
  
  release:
    needs: build
    runs-on: ubuntu-latest
    env:
      STATUS: ${{ !endsWith(github.ref, 'master') && 'alpha' || '' }}
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Download build artifacts
        uses: actions/download-artifact@v4
      - name: Display structure of downloaded files
        run: ls -R
      - name: Get version
        id: vars
        run: echo ::set-output name=version::$(cat VERSION)
      - name: Update release
        uses: johnwbyrd/update-release@v1.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          files: ./modular_tree_windows/modular_tree_${{ steps.vars.outputs.version }}_windows.zip ./modular_tree_linux/modular_tree_${{ steps.vars.outputs.version }}_linux.zip ./modular_tree_macOS/modular_tree_${{ steps.vars.outputs.version }}_macOS.zip 
          release: Release V${{ steps.vars.outputs.version }}${{ env.STATUS }}
          tag: ${{ steps.vars.outputs.version }}${{ env.STATUS }}
          message: V${{ steps.vars.outputs.version }}
          body: ''

